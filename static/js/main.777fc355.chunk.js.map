{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactItem/ContactItem.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","INITIAL_FORM_STATE","name","number","ContactForm","state","resetForm","setState","handleChange","target","value","handleSubmit","e","preventDefault","props","changeContacts","this","className","s","form","action","onSubmit","label","htmlFor","inputField","id","type","placeholder","pattern","title","required","onChange","button","Component","Filter","changeFiler","filter","ContactItem","contact","deleteContact","contactItem","contactText","onClick","ContactList","contacts","list","toLowerCase","includes","map","App","contactsAfterDelete","reduce","acc","isContactAlreadySaved","find","updateContacts","alert","prevState","nanoid","updateFilter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.777fc355.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2tE4W\",\"label\":\"ContactForm_label__OyEXr\",\"inputField\":\"ContactForm_inputField__bRFcU\",\"button\":\"ContactForm_button__1Vcc3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactItem_contactItem__2H2bF\",\"contactText\":\"ContactItem_contactText__vw88M\",\"button\":\"ContactItem_button__1Vfms\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Filter_title__OX5Ex\",\"inputField\":\"Filter_inputField__16nQy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3KCbI\"};","import { Component } from 'react';\nimport { PropTypes } from 'prop-types';\nimport s from './ContactForm.module.css';\n\nconst INITIAL_FORM_STATE = { name: '', number: '' };\n\nclass ContactForm extends Component {\n  static propTypes = { changeContacts: PropTypes.func.isRequired };\n\n  state = { name: '', number: '' };\n\n  resetForm = () => {\n    this.setState(INITIAL_FORM_STATE);\n  };\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.changeContacts(this.state.name, this.state.number);\n    this.resetForm();\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form className={s.form} action=\"#\" onSubmit={this.handleSubmit}>\n        <label className={s.label} htmlFor=\"name\">\n          Name:\n        </label>\n        <input\n          className={s.inputField}\n          id=\"name\"\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Enter name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={this.handleChange}\n        />\n        <label className={s.label} htmlFor=\"number\">\n          Number:\n        </label>\n        <input\n          className={s.inputField}\n          id=\"number\"\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          placeholder=\"Enter phone\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={this.handleChange}\n        />\n\n        <button className={s.button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import { Component } from 'react';\nimport { PropTypes } from 'prop-types';\nimport s from './Filter.module.css';\n\nclass Filter extends Component {\n  static propTypes = {\n    filter: PropTypes.string.isRequired,\n    changeFiler: PropTypes.func.isRequired,\n  };\n\n  handleChange = ({ target }) => {\n    const { value } = target;\n\n    this.props.changeFiler(value);\n  };\n\n  render() {\n    const { filter } = this.props;\n\n    return (\n      <>\n        <p className={s.title}>Find contacts by name</p>\n        <input\n          className={s.inputField}\n          type=\"text\"\n          name=\"filter\"\n          placeholder=\"Enter name\"\n          value={filter}\n          onChange={this.handleChange}\n        ></input>\n      </>\n    );\n  }\n}\n\nexport default Filter;\n","import { Component } from 'react';\nimport { PropTypes } from 'prop-types';\nimport s from './ContactItem.module.css';\n\nclass ContactItem extends Component {\n  static propTypes = {\n    contact: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n    deleteContact: PropTypes.func.isRequired,\n  };\n\n  render() {\n    const { contact, deleteContact } = this.props;\n\n    return (\n      <li className={s.contactItem}>\n        <span className={s.contactText}>\n          {contact.name}: {contact.number}\n        </span>\n        <button className={s.button} onClick={() => deleteContact(contact.id)}>\n          Delete\n        </button>\n      </li>\n    );\n  }\n}\n\nexport default ContactItem;\n","import { Component } from 'react';\nimport { PropTypes } from 'prop-types';\nimport ContactItem from '../ContactItem';\nimport s from './ContactList.module.css';\n\nclass ContactList extends Component {\n  static propTypes = {\n    contacts: PropTypes.array.isRequired,\n    filter: PropTypes.string.isRequired,\n  };\n\n  render() {\n    const { contacts, filter, deleteContact } = this.props;\n\n    return (\n      <ul className={s.list}>\n        {contacts\n          .filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()))\n          .map(contact => {\n            return (\n              <ContactItem contact={contact} key={contact.name} deleteContact={deleteContact} />\n            );\n          })}\n      </ul>\n    );\n  }\n}\n\nexport default ContactList;\n","import { Component } from 'react';\nimport { nanoid } from 'nanoid';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\nimport './App.css';\n\nclass App extends Component {\n  state = { contacts: [], filter: '' };\n\n  deleteContact = id => {\n    const contactsAfterDelete = this.state.contacts.reduce((acc, contact) => {\n      return contact.id !== id ? [...acc, contact] : acc;\n    }, []);\n    this.setState({ contacts: contactsAfterDelete });\n  };\n\n  isContactAlreadySaved = name => {\n    return this.state.contacts.find(contact => contact.name.toLowerCase() === name.toLowerCase());\n  };\n\n  updateContacts = (name, number) => {\n    if (this.isContactAlreadySaved(name)) {\n      return alert(`${name} is already in contacts.`);\n    } else {\n      this.setState(prevState => {\n        return {\n          contacts: [...prevState.contacts, { id: nanoid(), name, number }],\n        };\n      });\n    }\n  };\n\n  updateFilter = value => {\n    this.setState({ filter: value });\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"phonebookTitle\">Phonebook</h1>\n        <ContactForm changeContacts={this.updateContacts} />\n\n        <h2 className=\"contactsTitle\">Contacts</h2>\n        <Filter filter={filter} changeFiler={this.updateFilter} />\n        <ContactList contacts={contacts} filter={filter} deleteContact={this.deleteContact} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}