{"version":3,"sources":["components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","App.js","reportWebVitals.js","index.js"],"names":["INITIAL_FORM_STATE","name","number","ContactForm","state","resetForm","setState","handleChange","target","value","handleSubmit","e","preventDefault","props","changeContacts","this","action","onSubmit","htmlFor","id","type","placeholder","pattern","title","required","onChange","Component","Filter","changeFiler","filter","ContactItem","contact","ContactList","contacts","toLowerCase","includes","map","App","updateContacts","prevState","nanoid","updateFilter","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b658a077.chunk.js","sourcesContent":["import { Component } from 'react';\nimport { s } from './ContactForm.module.css';\n\nconst INITIAL_FORM_STATE = { name: '', number: '' };\n\nclass ContactForm extends Component {\n  state = { name: '', number: '' };\n\n  resetForm = () => {\n    this.setState(INITIAL_FORM_STATE);\n  };\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.changeContacts(this.state.name, this.state.number);\n    this.resetForm();\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form action=\"#\" onSubmit={this.handleSubmit}>\n        <label htmlFor=\"name\">Name:</label>\n        <input\n          id=\"name\"\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Enter name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={this.handleChange}\n        />\n        <label htmlFor=\"number\">Number:</label>\n        <input\n          id=\"number\"\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          placeholder=\"Enter phone\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={this.handleChange}\n        />\n\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import { Component } from 'react';\nimport { s } from './Filter.module.css';\n\nclass Filter extends Component {\n  handleChange = ({ target }) => {\n    const { value } = target;\n\n    this.props.changeFiler(value);\n  };\n\n  render() {\n    const { filter } = this.props;\n\n    return (\n      <>\n        <p>Find contacts by name</p>\n        <input\n          type=\"text\"\n          name=\"filter\"\n          placeholder=\"Enter name\"\n          value={filter}\n          onChange={this.handleChange}\n        ></input>\n      </>\n    );\n  }\n}\n\nexport default Filter;\n","import { Component } from 'react';\nimport { s } from './ContactItem.module.css';\n\nclass ContactItem extends Component {\n  render() {\n    const { contact } = this.props;\n\n    return (\n      <li>\n        {contact.name}:{contact.number}\n      </li>\n    );\n  }\n}\n\nexport default ContactItem;\n","import { Component } from 'react';\nimport ContactItem from '../ContactItem';\nimport { s } from './ContactList.module.css';\n\nclass ContactList extends Component {\n  render() {\n    const { contacts, filter } = this.props;\n\n    return (\n      <ul>\n        {contacts\n          .filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()))\n          .map(contact => {\n            return <ContactItem contact={contact} key={contact.name} />;\n          })}\n      </ul>\n    );\n  }\n}\n\nexport default ContactList;\n","import { Component } from 'react';\nimport { nanoid } from 'nanoid';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\nimport './App.css';\n\n// const INITIAL_FORM_STATE = { name: '', number: '' };\n\nclass App extends Component {\n  state = { contacts: [], filter: '' };\n\n  updateContacts = (name, number) => {\n    this.setState(prevState => {\n      return {\n        contacts: [...prevState.contacts, { id: nanoid(), name, number }],\n      };\n    });\n  };\n\n  updateFilter = value => {\n    this.setState({ filter: value });\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>Phonebook</h1>\n        <ContactForm changeContacts={this.updateContacts} />\n\n        <h2>Contacts</h2>\n        <Filter filter={filter} changeFiler={this.updateFilter} />\n        <ContactList contacts={contacts} filter={filter} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}